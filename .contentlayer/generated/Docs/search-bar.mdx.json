{
  "title": "Search Bar",
  "description": "Effortless search integration with Contentlayer and regex-based highlighting.",
  "date": "2025-03-12T00:00:00.000Z",
  "body": {
    "raw": "\n# No-Setup Search Bar üöÄ\n\nOne of the coolest things about **Pinexio** is its built-in search functionality. Thanks to **Contentlayer**, there is absolutely **no additional setup** required. Any `.mdx` file inside the `docs/` folder is automatically indexed and searchable. That means **no third-party libraries**, no extra indexing steps, and no configuration‚Äîjust write your documentation, and it‚Äôs instantly searchable!\n\n## üîç How It Works\n\nThe logic for searching and highlighting results is handled inside the **`SearchDialog`** component. Here‚Äôs how it works:\n\n1. **Regex-based search**: The search input filters through all `.mdx` files and highlights matching text.\n2. **Instant results**: Matches appear as you type, making navigation seamless.\n3. **Keyboard shortcut support**: Press `Cmd + K` (Mac) or `Ctrl + K` (Windows/Linux) to open the search box instantly.\n4. **Highlighted snippets**: The searched term is highlighted within the results.\n\n## ‚ú® Key Features\n\n- **üìÇ No Configuration Needed** ‚Äì Contentlayer automatically makes all `.mdx` files searchable.\n- **‚ö° Instant Search** ‚Äì Type in the search box, and relevant results appear immediately.\n- **üé® Customizable Highlighting** ‚Äì The `highlightText` function ensures matched keywords stand out.\n- **‚å®Ô∏è Keyboard Shortcuts** ‚Äì Quick access using `Cmd + K` or `Ctrl + K`.\n- **üìå Contextual Snippets** ‚Äì The `getSnippet` function provides relevant text around the search term.\n\n## üõ† Customization\n\nDevelopers can tweak the search experience by modifying:\n\n- `highlightText(text, searchTerm)`: Controls how search terms are highlighted.\n- `getSnippet(text, searchTerm, contextLength)`: Adjusts how much surrounding text is shown in results.\n- Styling: The UI is fully customizable with Tailwind CSS.\n\n## üîß Code Snippet: Search Highlighting\n\n```tsx\nfunction highlightText(text: string, searchTerm: string): React.ReactNode {\n  if (!searchTerm) return text;\n  const regex = new RegExp(`(${searchTerm})`, 'gi');\n  const parts = text.split(regex);\n  return (\n    <>\n      {parts.map((part, i) =>\n        regex.test(part) ? (\n          <span key={i} className=\"bg-yellow-300 dark:text-black rounded-sm\">\n            {part}\n          </span>\n        ) : (\n          part\n        )\n      )}\n    </>\n  );\n}\n```\n\n## üì∑ Visual Preview\n\n![Search Bar Demo](#)\n\n## üéØ Why This is Cool\n\n- **Developers don‚Äôt need to learn anything new**‚Äîjust write documentation, and it‚Äôs searchable.\n- **No indexing or database setup required**‚ÄîContentlayer handles everything automatically.\n- **Regex-based highlighting provides accurate and readable results**.\n- **Easily customizable for advanced search experiences**.\n\nThis makes **Pinexio‚Äô search a true \"No-Setup Search\" solution**, saving time and effort while delivering a powerful experience for users.\n\n---\n\nWant to enhance search further? Feel free to tweak the `SearchDialog` component to add fuzzy search, filters, or UI improvements. üöÄ\n",
    "code": "var Component=(()=>{var g=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),j=(s,e)=>{for(var i in e)l(s,i,{get:e[i],enumerable:!0})},t=(s,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!x.call(s,r)&&r!==i&&l(s,r,{get:()=>e[r],enumerable:!(a=p(e,r))||a.enumerable});return s};var N=(s,e,i)=>(i=s!=null?g(u(s)):{},t(e||!s||!s.__esModule?l(i,\"default\",{value:s,enumerable:!0}):i,s)),f=s=>t(l({},\"__esModule\",{value:!0}),s);var c=y((T,h)=>{h.exports=_jsx_runtime});var b={};j(b,{default:()=>o,frontmatter:()=>w});var n=N(c()),w={title:\"Search Bar\",date:\"2025-03-12\",description:\"Effortless search integration with Contentlayer and regex-based highlighting.\"};function d(s){let e={code:\"code\",h1:\"h1\",h2:\"h2\",hr:\"hr\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...s.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:\"no-setup-search-bar-\",children:\"No-Setup Search Bar \\u{1F680}\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"One of the coolest things about \",(0,n.jsx)(e.strong,{children:\"Pinexio\"}),\" is its built-in search functionality. Thanks to \",(0,n.jsx)(e.strong,{children:\"Contentlayer\"}),\", there is absolutely \",(0,n.jsx)(e.strong,{children:\"no additional setup\"}),\" required. Any \",(0,n.jsx)(e.code,{children:\".mdx\"}),\" file inside the \",(0,n.jsx)(e.code,{children:\"docs/\"}),\" folder is automatically indexed and searchable. That means \",(0,n.jsx)(e.strong,{children:\"no third-party libraries\"}),\", no extra indexing steps, and no configuration\\u2014just write your documentation, and it\\u2019s instantly searchable!\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"-how-it-works\",children:\"\\u{1F50D} How It Works\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The logic for searching and highlighting results is handled inside the \",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:\"SearchDialog\"})}),\" component. Here\\u2019s how it works:\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Regex-based search\"}),\": The search input filters through all \",(0,n.jsx)(e.code,{children:\".mdx\"}),\" files and highlights matching text.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Instant results\"}),\": Matches appear as you type, making navigation seamless.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Keyboard shortcut support\"}),\": Press \",(0,n.jsx)(e.code,{children:\"Cmd + K\"}),\" (Mac) or \",(0,n.jsx)(e.code,{children:\"Ctrl + K\"}),\" (Windows/Linux) to open the search box instantly.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Highlighted snippets\"}),\": The searched term is highlighted within the results.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"-key-features\",children:\"\\u2728 Key Features\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u{1F4C2} No Configuration Needed\"}),\" \\u2013 Contentlayer automatically makes all \",(0,n.jsx)(e.code,{children:\".mdx\"}),\" files searchable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u26A1 Instant Search\"}),\" \\u2013 Type in the search box, and relevant results appear immediately.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u{1F3A8} Customizable Highlighting\"}),\" \\u2013 The \",(0,n.jsx)(e.code,{children:\"highlightText\"}),\" function ensures matched keywords stand out.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u2328\\uFE0F Keyboard Shortcuts\"}),\" \\u2013 Quick access using \",(0,n.jsx)(e.code,{children:\"Cmd + K\"}),\" or \",(0,n.jsx)(e.code,{children:\"Ctrl + K\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u{1F4CC} Contextual Snippets\"}),\" \\u2013 The \",(0,n.jsx)(e.code,{children:\"getSnippet\"}),\" function provides relevant text around the search term.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"-customization\",children:\"\\u{1F6E0} Customization\"}),`\n`,(0,n.jsx)(e.p,{children:\"Developers can tweak the search experience by modifying:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"highlightText(text, searchTerm)\"}),\": Controls how search terms are highlighted.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"getSnippet(text, searchTerm, contextLength)\"}),\": Adjusts how much surrounding text is shown in results.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Styling: The UI is fully customizable with Tailwind CSS.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"-code-snippet-search-highlighting\",children:\"\\u{1F527} Code Snippet: Search Highlighting\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"hljs language-tsx\",children:[(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-title function_\",children:\"highlightText\"}),\"(\",(0,n.jsxs)(e.span,{className:\"hljs-params\",children:[(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"text\"}),\": \",(0,n.jsx)(e.span,{className:\"hljs-built_in\",children:\"string\"}),\", \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"searchTerm\"}),\": \",(0,n.jsx)(e.span,{className:\"hljs-built_in\",children:\"string\"})]}),\"): \",(0,n.jsx)(e.span,{className:\"hljs-title class_\",children:\"React\"}),\".\",(0,n.jsx)(e.span,{className:\"hljs-property\",children:\"ReactNode\"}),` {\n  `,(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"if\"}),\" (!searchTerm) \",(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),` text;\n  `,(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" regex = \",(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-title class_\",children:\"RegExp\"}),\"(\",(0,n.jsxs)(e.span,{className:\"hljs-string\",children:[\"`(\",(0,n.jsx)(e.span,{className:\"hljs-subst\",children:\"${searchTerm}\"}),\")`\"]}),\", \",(0,n.jsx)(e.span,{className:\"hljs-string\",children:\"'gi'\"}),`);\n  `,(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" parts = text.\",(0,n.jsx)(e.span,{className:\"hljs-title function_\",children:\"split\"}),`(regex);\n  `,(0,n.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),` (\n    `,(0,n.jsxs)(e.span,{className:\"xml\",children:[(0,n.jsx)(e.span,{className:\"hljs-tag\",children:\"<>\"}),`\n      {parts.map((part, i) =>\n        regex.test(part) ? (\n          `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"<\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"span\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"key\"}),\"=\",(0,n.jsx)(e.span,{className:\"hljs-string\",children:\"{i}\"}),\" \",(0,n.jsx)(e.span,{className:\"hljs-attr\",children:\"className\"}),\"=\",(0,n.jsx)(e.span,{className:\"hljs-string\",children:'\"bg-yellow-300 dark:text-black rounded-sm\"'}),\">\"]}),`\n            {part}\n          `,(0,n.jsxs)(e.span,{className:\"hljs-tag\",children:[\"</\",(0,n.jsx)(e.span,{className:\"hljs-name\",children:\"span\"}),\">\"]}),`\n        ) : (\n          part\n        )\n      )}\n    `,(0,n.jsx)(e.span,{className:\"hljs-tag\",children:\"</>\"})]}),`\n  );\n}\n`]})}),`\n`,(0,n.jsx)(e.h2,{id:\"-visual-preview\",children:\"\\u{1F4F7} Visual Preview\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"#\",alt:\"Search Bar Demo\"})}),`\n`,(0,n.jsx)(e.h2,{id:\"-why-this-is-cool\",children:\"\\u{1F3AF} Why This is Cool\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Developers don\\u2019t need to learn anything new\"}),\"\\u2014just write documentation, and it\\u2019s searchable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"No indexing or database setup required\"}),\"\\u2014Contentlayer handles everything automatically.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Regex-based highlighting provides accurate and readable results\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Easily customizable for advanced search experiences\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"This makes \",(0,n.jsx)(e.strong,{children:'Pinexio\\u2019 search a true \"No-Setup Search\" solution'}),\", saving time and effort while delivering a powerful experience for users.\"]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"Want to enhance search further? Feel free to tweak the \",(0,n.jsx)(e.code,{children:\"SearchDialog\"}),\" component to add fuzzy search, filters, or UI improvements. \\u{1F680}\"]})]})}function o(s={}){let{wrapper:e}=s.components||{};return e?(0,n.jsx)(e,{...s,children:(0,n.jsx)(d,{...s})}):d(s)}return f(b);})();\n;return Component;"
  },
  "_id": "search-bar.mdx",
  "_raw": {
    "sourceFilePath": "search-bar.mdx",
    "sourceFileName": "search-bar.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "search-bar"
  },
  "type": "Docs",
  "url": "/docs/search-bar",
  "slug": "search-bar"
}